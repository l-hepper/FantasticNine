# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "Developer" ]
  pull_request:
    branches: [ "Developer" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file FantasticNineWebAndAPI/pom.xml -Dspring.profiles.active=ci -Dmaven.test.failure.ignore=true
      env:
        DB_URL: ${{ secrets.DB_URL }}
        DB_NAME: ${{ secrets.DB_NAME }}
        API_KEY: ${{ secrets.API_KEY }}

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build Docker image
      run: docker build -t lhepper1/fantastic9:latest .

    - name: Push Docker image
      run: docker push lhepper1/fantastic9:latest

    - name: Trigger Render Deploy Hook
      run: |
        curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
